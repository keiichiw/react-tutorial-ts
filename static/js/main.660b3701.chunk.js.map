{"version":3,"sources":["board.tsx","game.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","square","display","flexWrap","width","spacing","height","borderColor","mark","textAlign","flexDirection","justifyContent","Square","props","classes","Paper","elevation","variant","className","onClick","style","Typography","value","Board","i","this","selectedMove","winningLine","includes","Grid","item","squares","board","row","j","push","renderSquare","key","container","xs","React","Component","styles","createStyles","root","margin","gameBoard","history","Game","withStyles","state","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","gameEnd","setState","concat","pos","step","status","current","result","moves","map","move","desc","undefined","Math","floor","col","ListItem","button","dense","divider","ListItemText","jumpTo","onMouseOver","selectMove","onMouseOut","deselectMove","primary","winner","handleClick","List","lines","a","b","c","every","x","Main","AppBar","position","Toolbar","IconButton","edge","color","aria-label","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.660b3701.chunk.js","sourcesContent":["import React from \"react\";\nimport CSS from \"csstype\";\nimport { Typography, Grid, Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  square: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      width: theme.spacing(12),\n      height: theme.spacing(12),\n    },\n    \"&:hover\": {\n      borderColor: \"red\",\n    },\n  },\n  mark: {\n    textAlign: \"center\",\n    height: theme.spacing(12),\n    width: theme.spacing(12),\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\n\ntype SquareProps = {\n  onClick: () => void;\n  style: React.CSSProperties;\n  value: string;\n};\n\nfunction Square(props: SquareProps) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper\n        elevation={15}\n        variant=\"outlined\"\n        className={classes.square}\n        onClick={props.onClick}\n        style={props.style}\n      >\n        <Typography variant=\"h4\" className={classes.mark}>\n          {props.value}\n        </Typography>\n      </Paper>\n    </div>\n  );\n}\n\ntype BoardProps = {\n  selectedMove: number | null;\n  winningLine: Array<number>;\n  squares: Array<string>;\n  onClick: (args0: number) => void;\n};\n\nclass Board extends React.Component<BoardProps> {\n  renderSquare(i: number) {\n    let style: CSS.Properties = {};\n    if (this.props.selectedMove === i) {\n      style[\"color\"] = \"red\";\n    }\n\n    if (this.props.winningLine && this.props.winningLine.includes(i)) {\n      style[\"background\"] = \"yellow\";\n    }\n\n    return (\n      <Grid item spacing={1}>\n        <Square\n          key={i}\n          style={style}\n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      </Grid>\n    );\n  }\n\n  render() {\n    let board = [];\n    for (let i = 0; i < 3; i++) {\n      let row = [];\n      for (let j = 0; j < 3; j++) {\n        row.push(this.renderSquare(i * 3 + j));\n      }\n      const key = `row-${i}`;\n      board.push(\n        <Grid container item xs={12} spacing={1} key={key}>\n          {row}\n        </Grid>\n      );\n    }\n    return (\n      <Grid container spacing={3}>\n        {board}\n      </Grid>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\nimport { Typography, List, ListItem, ListItemText } from \"@material-ui/core\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport { Theme } from \"@material-ui/core/styles/createMuiTheme\";\n\nimport Board from \"./board\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      \"& h6\": {\n        margin: \"12px\",\n      },\n    },\n    gameBoard: {\n      margin: \"20px\",\n    },\n    history: {},\n  });\n\ntype GameProps = {\n  classes: {\n    root: string;\n    gameBoard: string;\n    history: string;\n  };\n};\n\ntype HistoryElem = {\n  pos?: number;\n  squares: Array<string>;\n};\n\ntype GameState = {\n  history: Array<HistoryElem>;\n  stepNumber: number;\n  xIsNext: boolean;\n  selectedMove: number | null;\n};\n\nconst Game = withStyles(styles)(\n  class extends React.Component<GameProps, GameState> {\n    constructor(props: GameProps) {\n      super(props);\n      this.state = {\n        history: [\n          {\n            squares: Array(9).fill(null),\n          },\n        ],\n        stepNumber: 0,\n        xIsNext: true,\n        selectedMove: null,\n      };\n    }\n\n    handleClick(i: number) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length - 1];\n      const squares = current.squares.slice();\n      const result = calculateWinner(squares);\n      if (result.gameEnd || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n      this.setState({\n        history: history.concat([\n          {\n            pos: i,\n            squares: squares,\n          },\n        ]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n      });\n    }\n\n    jumpTo(step: number) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: step % 2 === 0,\n      });\n    }\n\n    selectMove(pos: number | undefined) {\n      if (pos) {\n        this.setState({\n          selectedMove: pos,\n        });\n      }\n    }\n\n    deselectMove() {\n      this.setState({\n        selectedMove: null,\n      });\n    }\n\n    render() {\n      const { classes } = this.props;\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const result = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        let desc;\n        if (step.pos !== undefined) {\n          const row = Math.floor(step.pos / 3) + 1;\n          const col = (step.pos % 3) + 1;\n          desc = `Move #${move}: (${row}, ${col})`;\n        } else {\n          desc = \"Back to the initial state.\";\n        }\n        return (\n          <ListItem key={move} button dense divider>\n            <ListItemText\n              onClick={() => this.jumpTo(move)}\n              onMouseOver={() => this.selectMove(step.pos)}\n              onMouseOut={() => this.deselectMove()}\n              primary={desc}\n            />\n          </ListItem>\n        );\n      });\n\n      let status;\n      if (result.winner) {\n        status = \"Winner: \" + result.winner;\n      } else if (result.gameEnd) {\n        status = \"Draw!\";\n      } else {\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n      }\n\n      return (\n        <div className={classes.root}>\n          <Typography variant=\"h6\">{status}</Typography>\n          <div className={classes.gameBoard}>\n            <Board\n              squares={current.squares}\n              selectedMove={this.state.selectedMove}\n              winningLine={result.winningLine}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <Typography variant=\"h6\">History:</Typography>\n          <div className={classes.history}>\n            <List>{moves}</List>\n          </div>\n        </div>\n      );\n    }\n  }\n);\n\nfunction calculateWinner(squares: Array<string>) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        gameEnd: true,\n        winner: squares[a],\n        winningLine: lines[i],\n      };\n    }\n  }\n\n  const gameEnd = squares.every((x) => x);\n  return {\n    gameEnd,\n    winner: null,\n    winningLine: [],\n  };\n}\n\nexport default withStyles(styles)(Game);\n","import ReactDOM from \"react-dom\";\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\n\nimport Game from \"./game\";\n\nfunction Main() {\n  return (\n    <div>\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className=\"icon-button\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n            ></IconButton>\n            <Typography variant=\"h6\" className=\"news\">\n              Tic-Tac-Toe\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n      <Game />\n    </div>\n  );\n}\n\nReactDOM.render(<Main />, document.getElementById(\"root\"));\n"],"sourceRoot":""}